/* 
Color pallete. This section defines variables for the color pallete
*/
:root {
    --white-font: #FFFFFF;
    --black-font: #000000;
    --color-1: #F8DF8C ;
    --color-5: #F8DFDB;
    --color-6: #FC221C;
}

@font-face {
    font-family: 'Wagon Bold';
    src: url(fonts/Wagon-Bold.otf);
}
@font-face {
    font-family: 'Wagon Extra Light';
    src: url(fonts/Wagon-ExtraLight.otf);
}
body{
    background-color: var(--color-5);
    max-width: 72em;
    margin: 0 auto;
    
}
.navbar {
    display: flex;
    justify-content: flex-end;
    padding: 2em;
    
  }
    #navbar-menu{
            display: flex;
            gap: 1em;
            font-size: 2em;
          }
          
          #navbar-menu li:hover {
            background-color:var(--color-1);
            border-radius: 5px;
            transition: 0.3s ease;
          }
          
          #navbar-menu li, a {
            padding: 1em 2em;
             list-style: none;
             text-decoration: none;
             font-family: 'Wagon Extra Light';
             color: var(--black-font);
          }

   


/* Defines the main container size, we are limiting to 72em max and centring in the viewport */
.main-container {
    max-width: 72em;
    margin: 0 auto;
    font-family: Inter;
    color: var(--color-6);
    /* TODO: set the main font color */
}

/* Here we define the aspects of style of our elements other than their grid layout */
.banner {
    padding: 1em;
    grid-area: ban ;
    text-align: center;
    /* TODO: banner styling */
}

h1 {
    font-size: 4em;
    font-family: 'Wagon Bold';
   
    color: var(--color-6);
    /* TODO: banner main title font styling */
}
h2, h3{
    font-family: 'Wagon Bold';
}
h3{
    font-size: 1.2em;
}

.banner-subtitle {
    font-size: 2.25em ;
    padding-left: 0.15em;
    padding-top: 0.125em;
   
    /* TODO: banner subtitle font styling */
}
.sub-section{
    font-size: 1.8em ;
    padding-left: 0.15em;
    padding-top: 0.125em;
    font-family: 'Wagon Bold';
    text-align: center;
}

.project {
    display: flex;
   flex-direction: row;
    border-radius: 16px 16px 16px 16px;

    /* TODO: style the card as a column based flexbox with rounded corners */
}

/* this is the equivalent of setting the image rectangle to "Fill Container" in Figma */ 
.project-image {
   width: 100%;
   max-height: 100%;
    border-radius: 16px 16px 16px 16px;
}

.project-text {
    padding: 2em;
    font-size: 1.2em;
    /* TODO: style the blurb with padding */
}

.small-img img{
    height: 1.5em;
    width: 1.5em;
}

/* this is the equivalent of setting the image rectangle to "Fill Container" in Figma */ 
.client-icon {
    width: 100%;
}
.project{
    display: contents;
}

/* now we create names for the grid areas for specific elements */
#banner {
    grid-area: ban;
    /* TODO: give the grid-area a name */
}
#sub-section1{
    grid-area: subs;
}

#project-1-image {
    grid-area: p1i ;
    /* TODO: give the grid-area a name */
}

#project-1-text {
    grid-area: p1t;
    /* TODO: give the grid-area a name */
}

#project-2-image {
    grid-area: p2i;
    /* TODO: give the grid-area a name */
}
#project-2-text {
    grid-area: p2t;
    /* TODO: give the grid-area a name */
}
#project-3-image {
    grid-area: p3i;
    /* TODO: give the grid-area a name */
}
#project-3-text {
    grid-area: p3t;
    /* TODO: give the grid-area a name */
}
#project-4-image {
    grid-area: p4i;
    /* TODO: give the grid-area a name */
}
#project-4-text {
    grid-area: p4t;
    /* TODO: give the grid-area a name */
}

#project-5-image {
    grid-area: p5i;
    /* TODO: give the grid-area a name */
}
#project-5-text {
    grid-area: p5t;
    /* TODO: give the grid-area a name */
}
#project-6-image {
    grid-area: p6i;
    /* TODO: give the grid-area a name */
}
#project-6-text {
    grid-area: p6t;
    /* TODO: give the grid-area a name */
}

#teamMemberCardBlurb1{
    grid-area: tmb1;
}
#teamMemberCardBlurb2{
    grid-area: tmb2;
}
#teamMemberCardBlurb3{
    grid-area: tmb3;
}
#teamMemberCardBlurb4{
    grid-area: tmb4;
}
#teamMemberCardBlurb5{
    grid-area: tmb5;
}
#teamMemberCardBlurb6{
    grid-area: tmb6;
}
/* Use a flexible layout grid */
.main-container {
    display: grid;
    column-gap: 1em;
}
  
/* 
Responsive Layout breakpoints. We start 'mobile-first' i.e. we define how the layout should look
for the smallest screen sizes. In this case we want a single column that spans the main container.
Because this CSS definition comes first, it will apply by default. Then we override it below with 
media queries for progressively bigger screen widths
*/ 

/* Grid-template for mobile phone layout */
.main-container {
    grid-template: 
   " .    .    .   ." minmax(2em, auto)
   " .  ban ban  ." minmax( 6em, auto)
   " .    .    .   ." minmax(2em, auto)
   " .  subs subs  ." minmax(6em, auto)
   " .   .   .   .  " minmax(4em, auto)
   "p1t p1t p1t p1t " minmax(30em, auto)
   " .   .   .   .  " minmax(1em, auto)
   "p1i p1i p1i p1i " minmax(8em, auto)
   " .   .   .   .  " minmax(4em, auto)
   "p2t p2t p2t p2t " minmax(8em, auto)
   " .   .   .   .  " minmax(1em, auto)
   "p2i p2i p2i p2i " minmax(6em, auto)
   ".    .   .   .  " minmax(4em, auto)
   "p3t p3t p3t p3t" minmax(8em, auto) 
   ".    .   .   .  " minmax(1em, auto)
   "p3i p3i p3i p3i" minmax(8em, auto)
   ".    .   .   .  " minmax(4em, auto)
   "p4t p4t p4t p4t" minmax(8em, auto) 
   ".    .   .   .  " minmax(1em, auto)
   "p4i p4i p4i p4i" minmax(8em, auto) 
   ".    .   .   .  " minmax(4em, auto)
   "p5t p5t p5t p5t" minmax(8em, auto) 
   ".    .   .   .  " minmax(1em, auto)
   "p5i p5i p5i p5i" minmax(8em, auto)
   ".    .   .   .  " minmax(4em, auto)
   "p6t p6t p6t p6t" minmax(8em, auto) 
   ".    .   .   .  " minmax(1em, auto)
   "p6i p6i p6i p6i" minmax(8em, auto)
   ".    .   .   .  " minmax(1em, auto)
   
   
}
   
/* Grid-template for tablet layout */
@media (min-width: 50em) {
    
    .main-container {
        grid-template: 
        ".    .   .   . " minmax(2em, auto)
        "ban ban ban ban" minmax(8em, auto)
        ".    .   .   . " minmax(2em, auto)
        "subs subs subs subs" minmax(8em, auto)
        ".    .   .   . " minmax(2em, auto)
        "p1i p1i p1t p1t" minmax(16em, auto)
        ".    .   .   . " minmax(2em, auto)
        "p2i p2i p2t p2t " minmax(16em, auto)
        ".    .    .   ." minmax(4em, auto)
        "p3i p3i p3t p3t" minmax(16em, auto)
        ".    .   .   . " minmax(1em, auto)
        "p4i p4i p4t p4t" minmax(16em, auto)
        ".    .   .   . " minmax(1em, auto)
        "p5i p5i p5t p5t" minmax(16em, auto)
        ".    .   .   . " minmax(1em, auto)
        "p6i p6i p6t p6t" minmax(16em, auto)
        ".    .   .   . " minmax(1em, auto)   
    }
}

 /* Grid-template for desktop layout */
@media (min-width: 75em) {
    .main-container {
        grid-template: 
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
        "ban ban ban ban ban ban ban ban ban ban ban ban" minmax(8em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(2em, auto)
        "subs subs subs subs subs subs subs subs subs subs subs subs" minmax(2em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
        "p1i p1i p1i p1i p1i p1i p1t p1t p1t p1t p1t p1t" minmax(16em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
        "p2i p2i p2i p2i p2i p2i p2t p2t p2t p2t p2t p2t" minmax(16em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
        "p3i p3i p3i p3i p3i p3i p3t p3t p3t p3t p3t p3t" minmax(16em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
        "p4i p4i p4i p4i p4i p4i p4t p4t p4t p4t p4t p4t" minmax(16em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
        "p5i p5i p5i p5i p5i p5i p5t p5t p5t p5t p5t p5t" minmax(16em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
        "p6i p6i p6i p6i p6i p6i p6t p6t p6t p6t p6t p6t" minmax(16em, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
       
       
    }
}

/***********/
/* Footer */
/**********/
footer{
    text-align: left;
}
.footer-basic {
    padding-top: 4em;
    padding-bottom: 2em;
    margin: 0 auto;
    
    
}
#social-platforms{
    padding: 0;
}

.footer-basic ul {
    list-style: none;
    line-height: 1.6;
    margin-bottom: 0;
}

.footer-basic ul a{
    font-family: 'Wagon Bold';
    color: var(--color-6);
    font-size: 1.5em;
    padding-left: 0;
}


.footer-basic ul a:hover {
    opacity: 0.5;
}

.footer-basic .copyright {
    margin-top: 2em;
    font-size: 1em;
    color: rgb(142, 142, 142);
    margin-bottom: 0;
    font-family: Verdana, sans-serif;
}